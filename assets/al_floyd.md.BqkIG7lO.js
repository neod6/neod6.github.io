import{_ as a,c as e,o as t,a4 as o}from"./chunks/framework.DICQ8_im.js";const u=JSON.parse('{"title":"Floyd算法","description":"","frontmatter":{},"headers":[],"relativePath":"al/floyd.md","filePath":"al/floyd.md"}'),l={name:"al/floyd.md"},r=o('<h1 id="floyd算法" tabindex="-1">Floyd算法 <a class="header-anchor" href="#floyd算法" aria-label="Permalink to &quot;Floyd算法&quot;">​</a></h1><ul><li>任意点到任意点的最短路径，算法复杂度O(N**3)</li><li><a href="https://baike.baidu.com/item/Floyd%E7%AE%97%E6%B3%95?fromModule=lemma_search-box" target="_blank" rel="noreferrer">https://baike.baidu.com/item/Floyd算法?fromModule=lemma_search-box</a></li><li>三重循环，只能用在小数据规模，代码只有几行，通常不会单独命题。</li></ul><h1 id="usaco真题解析" tabindex="-1">USACO真题解析 <a class="header-anchor" href="#usaco真题解析" aria-label="Permalink to &quot;USACO真题解析&quot;">​</a></h1><p><a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3NzM2Mjk0Mw==&amp;action=getalbum&amp;album_id=3547375037311860744#wechat_redirect" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3NzM2Mjk0Mw==&amp;action=getalbum&amp;album_id=3547375037311860744#wechat_redirect</a></p>',4),i=[r];function m(_,d,c,s,n,p){return t(),e("div",null,i)}const f=a(l,[["render",m]]);export{u as __pageData,f as default};
