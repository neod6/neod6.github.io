import{_ as a,c as t,o as e,a2 as r,a4 as i}from"./chunks/framework.DpEepDfE.js";const u=JSON.parse('{"title":"BIT树状数组","description":"","frontmatter":{},"headers":[],"relativePath":"al/bit.md","filePath":"al/bit.md"}'),o={name:"al/bit.md"},_=r('<h1 id="bit树状数组" tabindex="-1">BIT树状数组 <a class="header-anchor" href="#bit树状数组" aria-label="Permalink to &quot;BIT树状数组&quot;">​</a></h1><p>一种高效的存储结构，结合倍增算法，高效计算区间和、区间极值RMQ</p><h1 id="usaco真题解析" tabindex="-1">USACO真题解析 <a class="header-anchor" href="#usaco真题解析" aria-label="Permalink to &quot;USACO真题解析&quot;">​</a></h1><p><a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3NzM2Mjk0Mw==&amp;action=getalbum&amp;album_id=3554233675502567427#wechat_redirect" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3NzM2Mjk0Mw==&amp;action=getalbum&amp;album_id=3554233675502567427#wechat_redirect</a><img src="'+i+'"></p>',4),c=[_];function s(m,n,p,l,d,h){return e(),t("div",null,c)}const f=a(o,[["render",s]]);export{u as __pageData,f as default};
