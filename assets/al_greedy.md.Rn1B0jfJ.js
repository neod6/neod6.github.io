import{_ as a,c as e,o as t,a2 as r,a4 as o}from"./chunks/framework.DpEepDfE.js";const g=JSON.parse('{"title":"贪心算法","description":"","frontmatter":{},"headers":[],"relativePath":"al/greedy.md","filePath":"al/greedy.md"}'),i={name:"al/greedy.md"},l=r('<h1 id="贪心算法" tabindex="-1">贪心算法 <a class="header-anchor" href="#贪心算法" aria-label="Permalink to &quot;贪心算法&quot;">​</a></h1><ul><li><p>贪心算法基本思想是在问题的每个决策阶段，都选择当前看起来最优的选择，即贪心地做出局部最优的决策，以期获得全局最优解。贪心算法简洁且高效，在许多实际问题中有着广泛的应用。</p></li><li><p>贪心问题的解决流程大体可分为以下三步。</p></li></ul><ol><li><p><strong>问题分析</strong>：梳理与理解问题特性，包括状态定义、优化目标和约束条件等。这一步在回溯和动态规划中都有涉及。</p></li><li><p><strong>确定贪心策略</strong>：确定如何在每一步中做出贪心选择。这个策略能够在每一步减小问题的规模，并最终解决整个问题。</p></li><li><p><strong>正确性证明</strong>：通常需要证明问题具有贪心选择性质和最优子结构。这个步骤可能需要用到数学证明，例如归纳法或反证法等。</p><p>贪心算法可以认为是一类特殊的动态规划问题。和DP一样，变化无穷。在青铜、白银组出现频繁</p></li></ol><h1 id="usaco真题解析" tabindex="-1">USACO真题解析 <a class="header-anchor" href="#usaco真题解析" aria-label="Permalink to &quot;USACO真题解析&quot;">​</a></h1><p><a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3NzM2Mjk0Mw==&amp;action=getalbum&amp;album_id=3390561345858797582#wechat_redirect" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3NzM2Mjk0Mw==&amp;action=getalbum&amp;album_id=3390561345858797582#wechat_redirect</a><img src="'+o+'"></p>',5),p=[l];function s(_,n,c,m,d,h){return t(),e("div",null,p)}const b=a(i,[["render",s]]);export{g as __pageData,b as default};
