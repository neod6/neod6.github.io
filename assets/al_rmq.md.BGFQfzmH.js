import{_ as a,c as e,o as t,a4 as l,a3 as i}from"./chunks/framework.DICQ8_im.js";const b=JSON.parse('{"title":"RMQ","description":"","frontmatter":{},"headers":[],"relativePath":"al/rmq.md","filePath":"al/rmq.md"}'),r={name:"al/rmq.md"},o=l('<h1 id="rmq" tabindex="-1">RMQ <a class="header-anchor" href="#rmq" aria-label="Permalink to &quot;RMQ&quot;">​</a></h1><ul><li>区间和可以通过前缀和加减完成，区间极值不行。</li><li>区间极值通过两个重叠区间极值来完成。</li><li><a href="https://blog.csdn.net/dajiangyou123456/article/details/93216872" target="_blank" rel="noreferrer">https://blog.csdn.net/dajiangyou123456/article/details/93216872</a></li><li>例如abcd是递增的4个值，则max(a:d)=max(max(a:c),max(b:d))</li><li>每个节点分别倍增求出，前后1248…个间隔的极值</li></ul><ol><li>一维静态:倍增法</li><li>一维动态：树状数组BIT</li><li>二维RMQ降为一维RMQ <ul><li><a href="https://usaco.guide/plat/range-sweep?lang=py" target="_blank" rel="noreferrer">https://usaco.guide/plat/range-sweep?lang=py</a></li><li>用维度1扫描数据&amp;查询/递增遍历</li><li>如果是数据，维度2加入bit</li><li>如果是查询，维度2 执行query</li></ul></li><li>更复杂的，用分治算法，</li></ol><h1 id="usaco真题解析" tabindex="-1">USACO真题解析 <a class="header-anchor" href="#usaco真题解析" aria-label="Permalink to &quot;USACO真题解析&quot;">​</a></h1><p><a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3NzM2Mjk0Mw==&amp;action=getalbum&amp;album_id=3433998532771102720#wechat_redirect" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3NzM2Mjk0Mw==&amp;action=getalbum&amp;album_id=3433998532771102720#wechat_redirect</a><img src="'+i+'"></p>',5),s=[o];function n(c,m,_,p,d,u){return t(),e("div",null,s)}const g=a(r,[["render",n]]);export{b as __pageData,g as default};
