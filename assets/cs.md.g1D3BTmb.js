import{_ as t,c as d,o as r,a4 as e}from"./chunks/framework.DICQ8_im.js";const b=JSON.parse('{"title":"CS","description":"","frontmatter":{},"headers":[],"relativePath":"cs.md","filePath":"cs.md"}'),a={name:"cs.md"},o=e('<h1 id="cs" tabindex="-1">CS <a class="header-anchor" href="#cs" aria-label="Permalink to &quot;CS&quot;">​</a></h1><p>编程 ，不仅是编程，</p><table><thead><tr><th></th><th>技术</th><th>价值观</th></tr></thead><tbody><tr><td>1</td><td>系统设计，参照design的循环</td><td>上帝视角，整体思考</td></tr><tr><td>2</td><td>OS调度<br>有限资源下最优</td><td>资源永远有限,时间换空间.空间换时间.工程不是找到完美方案，而是在可接受代价.找到可接受较优方案，<br>例如时间换技术，技术换金钱，金钱换时间，都可以互换</td></tr><tr><td>3</td><td>贪婪算法：局部最优≠整体最优、无解</td><td>长期主义,先投入后产生,先苦后甜,延迟享受 work for money ≠big money</td></tr><tr><td>4</td><td>简单,重复→效率↑</td><td>少优&gt;多普,工业化,流水线、规模效应</td></tr><tr><td>5</td><td>关键步优化→效率↑</td><td>元能力提升(核心能力、方法)→整体提升</td></tr><tr><td>6</td><td>时间复杂度：算法提升→效率↑数量级</td><td>方向、路径&gt;努力</td></tr><tr><td>7</td><td>分治.递归 <br>复杂→简单</td><td>任务拆解、时间、任务管理</td></tr></tbody></table>',3),s=[o];function c(_,n,h,i,l,p){return r(),d("div",null,s)}const f=t(a,[["render",c]]);export{b as __pageData,f as default};
